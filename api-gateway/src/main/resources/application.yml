spring:
  cloud:
    gateway:
      httpclient:
        wiretap: true
      httpserver:
        wiretap: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - POST
            allowedHeaders: "*"
      routes:
        - id: user_service
          uri: http://localhost:8082
          predicates:
            - Path=/users/**
          filters:
            - TokenRelay=
            - name: RequestRateLimiter
              args:
                # These are configurations per second
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-52403713.okta.com/oauth2/seriesSocialNetwork
      client:
        registration:
          default:
            provider: okta
            client-id: ${OKTA_CLIENT_ID}
            client-secret: ${OKTA_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/okta
            scope: [ "openid", "profile", "email" ]
        provider:
          okta:
            issuer-uri: https://dev-52403713.okta.com/oauth2/seriesSocialNetwork

management:
  endpoints:
    web:
      exposure:
        include: ["gateway", "health"]

logging:
  level:
    reactor.netty: INFO
    org.springframework.cloud.gateway: INFO
